<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Baimawen&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-20T12:47:01.270Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>白马文</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Centos7安装数据库</title>
    <link href="http://yoursite.com/2019/04/20/Centos7%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2019/04/20/Centos7安装数据库/</id>
    <published>2019-04-20T12:45:55.000Z</published>
    <updated>2019-04-20T12:47:01.270Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><ol><li>下载源安装包</li></ol><p><code>wget http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</code></p><ol start="2"><li>安装源</li></ol><p><code>yum -y install mysql57-community-release-el7-11.noarch.rpm</code></p><ol start="3"><li>安装MySQL服务器</li></ol><p><code>yum install mysql-community-server</code></p><ol start="4"><li>启动并设置开机自启</li></ol><p><code>systemctl start  mysqld.service</code></p><p><code>systemctl enable mysqld.service</code></p><ol start="5"><li>初始化数据库密码</li></ol><p><code>grep &quot;password&quot; /var/log/mysqld.log</code></p><p>#修改默认密码策略</p><p><code>set global validate_password_policy=0;</code>    </p><p><code>set global validate_password_length=1;</code></p><p><code>set password = password(&#39;123456&#39;);</code> #设置密码</p><ol start="6"><li>数据库授权</li></ol><p><code>mysql&gt;GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39; WITH GRANT OPTION;</code></p><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><ol><li>下载安装包</li></ol><p><code>wget http://download.redis.io/releases/redis-4.0.6.tar.gz</code></p><ol start="2"><li>解压Redis</li></ol><p><code>mkidr /usr/local/redis</code></p><p><code>tar -zxvf redis-4.0.6.tar.gz -C /usr/local/redis/</code></p><ol start="3"><li>安装gcc依赖</li></ol><p><code>yum install gcc</code></p><ol start="4"><li>编译安装</li></ol><p><code>cd /usr/local/redis/redis-4.0.6</code></p><p><code>make MALLOC=libc</code></p><p><code>cd src &amp;&amp; make install</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL&quot;&gt;&lt;a href=&quot;#MySQL&quot; class=&quot;headerlink&quot; title=&quot;MySQL&quot;&gt;&lt;/a&gt;MySQL&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;下载源安装包&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;wget http://dev.mysql.com
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Centos" scheme="http://yoursite.com/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Pig简单了解</title>
    <link href="http://yoursite.com/2019/04/20/Pig%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/04/20/Pig简单了解/</id>
    <published>2019-04-20T12:41:43.000Z</published>
    <updated>2019-04-20T12:42:32.790Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Apache Pig是MapReduce的一个抽象，是一个工具/平台，用于分析较大的数据集，并将它们表示为数据流。</p><p>可以使用Pig在Hadoop中执行所有的数据处理的操作</p><p>下载地址：[ <a href="http://mirrors.shu.edu.cn/apache/pig/pig-0.17.0/" target="_blank" rel="noopener">http://mirrors.shu.edu.cn/apache/pig/pig-0.17.0/</a> ]</p><ul><li>先决条件：在运行在Apache Pig之前，必须在系统上安装h好Hadooph和Java</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span> 创建pig存放目录</span><br><span class="line">mkdir /opt/pig</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 解压pig</span><br><span class="line">tar xvf tar xvf pig-0.17.0.tar.gz</span><br><span class="line">mv pig-0.17.0/*  /opt/pig</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 添加环境变量</span><br><span class="line">export PIG_HOME=/opt/pig</span><br><span class="line">export PIG_CLASSPATH=$PIG_HOME/conf</span><br><span class="line">export PATH=$PIG_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看是否配置成功</span><br><span class="line">pig -version</span><br></pre></td></tr></table></figure><h2 id="Pig的执行模式和机制"><a href="#Pig的执行模式和机制" class="headerlink" title="Pig的执行模式和机制"></a>Pig的执行模式和机制</h2><h3 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h3><ul><li>Local模式(pig -x local)<ul><li>在此模式下，所有文件都从本地主机和本地文件系统加载，通常用于测试。</li></ul></li></ul><ul><li>MapReduce模式(pig -x mapreduce)<ul><li>使用Pig加载或处理Hadoop文件系统中存在的数据的地方。在这种模式下， 每当执行Pig语句来处理数据时，会在后端调用一个MapReduce作业。</li></ul></li></ul><h3 id="执行机制"><a href="#执行机制" class="headerlink" title="执行机制"></a>执行机制</h3><p><strong>通过三种方式执行，即交互模式</strong></p><ul><li><p>交互模式（Grunt shell）</p><ul><li>在此shell中，可以输入Pig Latin语句并获取输出（使用Dump运算符）</li></ul></li><li><p>批处理模式（脚本）</p><ul><li>可以将Pig Latin脚本写入具有.pig扩展名的单个文件中，以批处理模式运行</li></ul></li><li><p>嵌入式模式（UDF）</p><ul><li>Pig允许在Java等编程语言中定义自己的函数，并在脚本中运行</li></ul></li></ul><h3 id="Pig-Grunt-Shell"><a href="#Pig-Grunt-Shell" class="headerlink" title="Pig Grunt Shell"></a>Pig Grunt Shell</h3><p>示例：<code>sh ls</code><br>调用Linux shell 的ls命令</p><p>示例： <code>fs -ls</code><br>调用HDFS的ls命令</p><p>示例： <code>exec /sample_script.pig</code><br>从Grunt shell执行Pig脚本</p><p>示例： <code>run /sample_script.pig</code><br>从Grunt shell运行Pig脚本</p><p><strong>exec和run命令之间的区别是，如果使用run，则脚本中的语句在historym命令中可用</strong></p><h2 id="Pig-Latin"><a href="#Pig-Latin" class="headerlink" title="Pig Latin"></a>Pig Latin</h2><p>Pig Latin适用于使用Pig分析Hadoop中数据的语言</p><h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><p>Pig的数据模型是完全嵌套的。</p><ul><li>包是元组的集合</li><li>元组是有序的字段集</li><li>字段是一段数据</li></ul><h3 id="类型结构运算符"><a href="#类型结构运算符" class="headerlink" title="类型结构运算符"></a>类型结构运算符</h3><p>()    -&gt;    元组构造函数运算符，用于构建元组</p><p>{}    -&gt;    包构造函数运算符，用于构造包    -&gt;    示例:{（Raju,30）,（Mohammad,45）}</p><p>[]    -&gt;    映射构造函数运算符，用于构造一个映射    -&gt;    示例：[name＃Raja,age＃30]</p><h4 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h4><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>加载和存储</td></tr><tr><td>LOAD</td><td>将数据从文件系统(local/HDFS)加载到关系中</td></tr><tr><td></td></tr><tr><td>STORE</td><td>将数据从文件系统(local/HDFS)存储到关系中</td></tr><tr><td></td></tr><tr><td>过滤</td></tr><tr><td>FILTER</td><td>从关系中删除不需要的行</td></tr><tr><td></td></tr><tr><td>DISTINCT</td><td>从关系中删除重复行</td></tr><tr><td></td></tr><tr><td>FOREACH, GENERATE</td><td>基于数据列生成数据转换</td></tr><tr><td></td></tr><tr><td>STREAM</td><td>使用外部程序转换关系</td></tr><tr><td></td></tr><tr><td>分组和连接</td></tr><tr><td>JOIN</td><td>连接两个或多个关系</td></tr><tr><td></td></tr><tr><td>COGROUP</td><td>将数据分组为两个或多个关系</td></tr><tr><td></td></tr><tr><td>GROUP</td><td>在单个关系中对数据进行分组</td></tr><tr><td></td></tr><tr><td>CROSS</td><td>创建两个或多个关系的向量积</td></tr><tr><td></td></tr><tr><td>排序</td></tr><tr><td>ORDER</td><td>基于一个或多个字段（升序或降序）排列关系</td></tr><tr><td></td></tr><tr><td>LIMIT</td><td>从关系中获取有限数量的元组</td></tr><tr><td></td></tr><tr><td>诊断运算符</td></tr><tr><td>DUMP</td><td>在控制台打印关系的内容</td></tr></tbody></table><h3 id="LOAD-运算符"><a href="#LOAD-运算符" class="headerlink" title="LOAD 运算符"></a>LOAD 运算符</h3><p>语法： load语句由两部分组成，用“=”运算符分隔。</p><p>左侧是想要存储数据的关系的名称</p><p>右侧是需要定义如何存储数据</p><p><code>Relation_name = LOAD &#39;Input file path&#39; USING function as schema;</code></p><ul><li>releation_name：必须要提到要存储的关系</li><li>Input file path：必须提到存储文件的HDFS目录(MapReduce模式)</li><li>function：必须从Pig提供的一组加载函数中选择一个函数(BigStorage, JsonLoader, PigStorage, TextLoader)</li><li>schema：必须定义数据的模式</li></ul><p><strong>PigStorage() 函数，将数据加载并存储为结构化文本文件。它采用分隔符，使用元组的每个实体作为参数分隔。默认情况下，它以“\t”作为参数。</strong></p><h3 id="STORE-存储数据"><a href="#STORE-存储数据" class="headerlink" title="STORE 存储数据"></a>STORE 存储数据</h3><p>语法：<code>STORE Relation_name INTO &#39;required_directory_path&#39; [USING function];</code></p><h3 id="Group运算符"><a href="#Group运算符" class="headerlink" title="Group运算符"></a>Group运算符</h3><p>用于在一个或多个关系中对数据进行分组，它收集具有相同key的数据</p><p>语法：<code>Group_data = GROUP Relation_name BY age;</code></p><h3 id="Foreach运算符"><a href="#Foreach运算符" class="headerlink" title="Foreach运算符"></a>Foreach运算符</h3><p>用于基于列数据生成指定的数据转换</p><p>语法：<code>Relation_name2 = FOREACH Relation_name1 GENRATE (required data);</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;Apache Pig是MapReduce的一个抽象，是一个工具/平台，用于分析较大的数据集，并将它们表示为数据流。&lt;/p&gt;
&lt;p&gt;可以使用P
      
    
    </summary>
    
      <category term="Bigdata" scheme="http://yoursite.com/categories/Bigdata/"/>
    
    
      <category term="Pig" scheme="http://yoursite.com/tags/Pig/"/>
    
  </entry>
  
  <entry>
    <title>XML &amp; Tomcat</title>
    <link href="http://yoursite.com/2019/03/28/XML&amp;Tomcat/"/>
    <id>http://yoursite.com/2019/03/28/XML&amp;Tomcat/</id>
    <published>2019-03-28T15:27:20.000Z</published>
    <updated>2019-03-28T17:55:13.760Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XML-amp-Tomcat"><a href="#XML-amp-Tomcat" class="headerlink" title="XML &amp; Tomcat"></a>XML &amp; Tomcat</h2><blockquote><p>被设计用来传输和存储数据</p></blockquote><h3 id="查看XML文件"><a href="#查看XML文件" class="headerlink" title="查看XML文件"></a>查看XML文件</h3><p>XMl文件中包含了许多的元素，XML格式的信息和其它标记的基本单元，以及各种各样的数据。</p><p>在所有的主流的浏览器中，均能够查看原始的XML文件</p><h3 id="什么是XML"><a href="#什么是XML" class="headerlink" title="什么是XML"></a>什么是XML</h3><ul><li>指可扩展标记语言（EXtendsible Markup Language）</li><li>是一种很像HTML的标记语言</li><li>设计宗旨是传输数据，而不是显示数据</li><li>标签没有被预定义，需要自行定义</li><li>被设计为具有自我描述性</li></ul><h3 id="和HTML的差异"><a href="#和HTML的差异" class="headerlink" title="和HTML的差异"></a>和HTML的差异</h3><ul><li>XML是被设计用来传输和存储数据，其焦点是数据的内容</li><li>HTML被设计用来显示数据，其焦点是数据的外观<blockquote><p>XML用于传输数据，而HTML用于格式化并显示数据</p></blockquote></li></ul><h3 id="定义XML"><a href="#定义XML" class="headerlink" title="定义XML"></a>定义XML</h3><ol><li><p>文档声明<br>version：解析这个xml的时候，使用什么版本的解析器解析<br>encoding：解析xml中的文字的时候，使用什么编码来翻译<br> standalone：no - 该文档会依赖关联其它文档    yes - 这是一个独立的文档<br>&lt;?xml version=”1.0” encoding=”UTF-8” standalone=”no”?&gt;</p></li><li><p>使用CSS来格式化XML文档</p></li></ol><p>&lt;?xml-stylesheet type=”text/css” href=”cd_catalog.css”?&gt;<br>使用CSS格式化XML不是常用的方法</p><ol start="3"><li>使用XSLT显示XML</li></ol><p>通过使用XSLT，可以把XMl文档转换HTML格式</p><blockquote><p>XSLT是首选的XML样式表语言    (eXtensible Stylesheet Language Transformations)</p></blockquote><h3 id="XML命名规则"><a href="#XML命名规则" class="headerlink" title="XML命名规则"></a>XML命名规则</h3><ul><li>名称可以包含字母、数字以及其它的字符</li><li>名称不能以数字或者标点符号开始</li><li>名称不能以字母xml（或者XML、Xml等等）开始</li><li>名称不能包含空格</li></ul><h3 id="XML-DTD（Document-Type-Definition）文档类型定义"><a href="#XML-DTD（Document-Type-Definition）文档类型定义" class="headerlink" title="XML DTD（Document Type Definition）文档类型定义"></a>XML DTD（Document Type Definition）文档类型定义</h3><ul><li>拥有正确语法的XMl被称为“形式良好”的XMl<ul><li>文档必须有一个根元素</li><li>元素都必须有一个关闭标签</li><li>标签对大小写敏感</li><li>元素必须被正确的嵌套</li><li>属性值必须加双引号</li></ul></li></ul><blockquote><p>DTD的作用</p><ul><li>DTD是一种保证XML文档格式正确的有效方法，可以通过比较XML文档和DTD文件来看文档是否符合规范，元素和标签使用是否正确</li><li>XML文件提供应用程序一个数据交换的格式，DTD正是让XML能够成为数据交换的标准。</li><li>DTD文件是一个ASCII的文本文件，后缀名为.dtd</li></ul></blockquote><p>通过引入的方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">文档类型   根标签名字   网络上的dtd    dtd的路径</span><br><span class="line">&lt;!DOCTYPE stus PUBLIC &quot;//UNKNOWN/&quot; &quot;unknown.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">本地的为</span><br><span class="line">&lt;!DOCTYPE stus SYSTEM &quot;stus.dtd&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>直接在XML里面嵌入DTD的约束规则：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE stus [</span></span><br><span class="line"><span class="meta">    &lt;!ELEMENT stus (stu)&gt;</span></span><br><span class="line"><span class="meta">    &lt;!ELEMENT stu (name,age,address)&gt;</span></span><br><span class="line"><span class="meta">    &lt;!ELEMENT name (#PCDATA)&gt;</span></span><br><span class="line"><span class="meta">    &lt;!ELEMENT age (#PCDATA)&gt;</span></span><br><span class="line"><span class="meta">    &lt;!ELEMENT address (#PCDATA)&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">stus</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">stu</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>12<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>武汉<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">stu</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">stus</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="XML-Schema"><a href="#XML-Schema" class="headerlink" title="XML Schema"></a>XML Schema</h3><p>约束文档<br><figure class="highlight xsd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- xmlns-&gt;xml namespace 命名空间 </span></span><br><span class="line"><span class="comment">目标名称空间，下面的那些元素都与这个命名空间绑定上 </span></span><br><span class="line"><span class="comment">targetNamespace="http://www.example.org/teacher" </span></span><br><span class="line"><span class="comment">元素的格式化情况 </span></span><br><span class="line"><span class="comment">elementFormDefault="qualified"&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">schema</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span></span></span><br><span class="line"><span class="tag"><span class="attr">targetNamespace</span>=<span class="string">"http://www.example.org/teacher"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:tns</span>=<span class="string">"http://www.example.org/teacher"</span></span></span><br><span class="line"><span class="tag"><span class="attr">elementFormDefault</span>=<span class="string">"qualified"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">element</span> <span class="attr">name</span>=<span class="string">"teachers"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">complexType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sequence</span> <span class="attr">maxOccurs</span>=<span class="string">"unbounded"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这是一个复杂元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">element</span> <span class="attr">name</span>=<span class="string">"teacher"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这是用于声明teacher元素是复杂元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">complexType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sequence</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 以下两个是简单元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">element</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">type</span>=<span class="string">"string"</span>&gt;</span><span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">element</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">type</span>=<span class="string">"int"</span>&gt;</span><span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sequence</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">complexType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sequence</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">complexType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">schema</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>实例文档<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- xmlns:xsi 必须是这样的写法，也就是这个值固定了 xmlns 这里是命名空间，也固定了，写的是schema里面的顶部目标命名空间 </span></span><br><span class="line"><span class="comment">xsi:schemaLocation 有两段，前面是命名空间，也就是目标空间的值，后面是约束文档的路径 --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">teachers</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.w3.org/2001/XMLSchema teacher.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">teacher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>z<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>12<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">teacher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">teacher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>z<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>12<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">teacher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">teachers</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="命名空间的作用"><a href="#命名空间的作用" class="headerlink" title="命名空间的作用"></a>命名空间的作用</h4><p>一个xml如果想指定它的约束规则，假设使用的是DTD，那么这个xml只能指定一个DTD</p><p>但是如果一个xml的约束是定义在schema里面，并且是多个schema，那么是可以的。</p><p>简单来说：一个xml可以引用多个schema约束，但是只能引用一个DTD约束。</p><p>名称空间的作用就是在写元素的时候，可以指定该元素使用的是哪一套约束规则。</p><p>默认情况下，如果只有一套规则，那么都可以这么写。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aa:name</span>&gt;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bb:name</span>&gt;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XMl解析方式"><a href="#XMl解析方式" class="headerlink" title="XMl解析方式"></a>XMl解析方式</h3><blockquote><p>DOM：document object model</p></blockquote><p>把整个xml全部读到内从当中，形成树状结构。</p><ul><li>整个文档称之为document对象</li><li>属性对应Attribute对象</li><li>所有的元素节点对应Element对象</li><li>文本称之为Text对象</li><li>以上所有对象都可称之为Node节点</li></ul><blockquote><p>SAX：Simple API for Xml</p></blockquote><p>基于事件驱动</p><p>不可以进行增删，只能查询</p><h3 id="Dom4j-基本用法"><a href="#Dom4j-基本用法" class="headerlink" title="Dom4j 基本用法"></a>Dom4j 基本用法</h3><p>element.element(“stu”);        返回该元素下的第一个stu元素<br>element.elements();        返回该元素下的所有子元素</p><ol><li>创建SaxReader对象</li><li>指定解析的xml</li><li>获取根元素</li><li>根据根元素获取子元素或者下面的子孙元素</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 1. 创建sax读取对象</span></span><br><span class="line">SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 指定解析的xml文件</span></span><br><span class="line">Document document = reader.read(<span class="keyword">new</span> File(<span class="string">"src/xml/stus.xml"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 得到元素</span></span><br><span class="line">Element rootElement = document.getRootElement();</span><br><span class="line">String name = rootElement.element(<span class="string">"stu"</span>).element(<span class="string">"name"</span>).getStringValue();</span><br><span class="line"><span class="comment">//System.out.println(name);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取根元素下的所有元素</span></span><br><span class="line">List&lt;Element&gt; elements = rootElement.elements();</span><br><span class="line"><span class="keyword">for</span> (Element element : elements) &#123;</span><br><span class="line">String value1 = element.getStringValue();</span><br><span class="line">String value2 = element.element(<span class="string">"name"</span>).getText();</span><br><span class="line">System.out.println(value2);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Dom4j的Xpath使用"><a href="#Dom4j的Xpath使用" class="headerlink" title="Dom4j的Xpath使用"></a>Dom4j的Xpath使用</h4><ol><li>添加jar包依赖        jaxen-1.1-beta-6.jar</li><li>在查找指定节点的时候，根据Xpath语法规则来查找</li><li>后续的代码与以前的解析一样</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要想使用Xpath，还得添加支持的jar:jaxen</span></span><br><span class="line"><span class="comment">// 获取的是第一个，只返回一个</span></span><br><span class="line">Element nameElement = (Element) rootElement.selectSingleNode(<span class="string">"//name"</span>);</span><br><span class="line">System.out.println(nameElement.getName());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取文档里面的所有name元素</span></span><br><span class="line">List&lt;Element&gt; list = rootElement.selectNodes(<span class="string">"//name"</span>);</span><br><span class="line"><span class="keyword">for</span> (Element element : list) &#123;</span><br><span class="line">System.out.println(element.getText());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Tomcat目录"><a href="#Tomcat目录" class="headerlink" title="Tomcat目录"></a>Tomcat目录</h2><p>bin<br>    包含了一些jar，bat文件    startup.bat</p><p>conf<br>    tomcat的配置    server.xml    web.xml</p><p>lib<br>    tomcat运行所需的jar文件</p><p>logs<br>    运行的日志文件</p><p>temp<br>    临时文件</p><p>webapps<br>    发布到tomcat服务器上的项目</p><p>work<br>    jsp翻译成class文件存放地</p><h3 id="配置虚拟路径"><a href="#配置虚拟路径" class="headerlink" title="配置虚拟路径"></a>配置虚拟路径</h3><ol><li>在conf/server.xml    找到Host元素节点</li><li><p>加入以下内容</p> <!-- docBase:项目的路径地址 path：对应的虚拟路径    一定要以/开始 --> <context docbase="D:\xml02" path="/a"></context></li></ol><p>OR</p><ol><li>在tomcat/conf/catalina/localhost/ 文件夹下新建一个xml文件，名字自定义</li><li>在这个文件里面写入<br> &lt;?xml version=”1.0” encoding=”UTF-8”?&gt;<br> <context docbase="D:\xml02"></context><br>访问：<a href="http://localhost:8080/person/xml名字即可" target="_blank" rel="noopener">http://localhost:8080/person/xml名字即可</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;XML-amp-Tomcat&quot;&gt;&lt;a href=&quot;#XML-amp-Tomcat&quot; class=&quot;headerlink&quot; title=&quot;XML &amp;amp; Tomcat&quot;&gt;&lt;/a&gt;XML &amp;amp; Tomcat&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;被设计用来
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="XML" scheme="http://yoursite.com/tags/XML/"/>
    
      <category term="Tomcat" scheme="http://yoursite.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/03/28/hello-world/"/>
    <id>http://yoursite.com/2019/03/28/hello-world/</id>
    <published>2019-03-28T14:52:25.722Z</published>
    <updated>2019-03-28T14:52:25.722Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
